apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "aveek.com.learnadvancedandroid"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportLibrary"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayout"
    testImplementation "junit:junit:$jUnit"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger2"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger2"
    kapt "com.google.dagger:dagger-compiler:$dagger2"
    kapt "com.android.databinding:compiler:$gradle_version"
    androidTestImplementation "com.android.support.test:runner:$testRunner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso"


    compile "com.squareup.retrofit2:retrofit:$retrofit"
    compile "com.squareup.retrofit2:converter-gson:$retrofit"
    compile "io.reactivex.rxjava2:rxjava:$rxjava"
    compile "io.reactivex.rxjava2:rxandroid:$rxandroid"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxjava2adapter"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttpinterceptor"
    compile "com.google.dagger:dagger:$dagger2"
    compile "com.google.dagger:dagger-android:$dagger2"
    compile "com.google.dagger:dagger-android-support:$dagger2"
    compile "com.github.bumptech.glide:glide:$glide"
    compile "com.android.support:recyclerview-v7:$supportLibrary"
    compile "com.android.support:cardview-v7:$supportLibrary"



//    def lifecycle_version = "2.0.0-alpha1"

// ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    // alternatively - just ViewModel
    implementation "android.arch.lifecycle:viewmodel:$lifecycle_version" // use -ktx for Kotlin
    // alternatively - just LiveData
    implementation "android.arch.lifecycle:livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    implementation "android.arch.lifecycle:runtime:$lifecycle_version"

    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of compiler
    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$lifecycle_version"

}
kapt {
    generateStubs = true
}
